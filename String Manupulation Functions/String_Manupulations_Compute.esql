

CREATE COMPUTE MODULE String_Manupulations_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		
		DECLARE test REFERENCE TO InputRoot.XMLNSC.name;
		--1). OVERLAY METHOD
		--SET OutputRoot.JSON.Data.Result =OVERLAY(test PLACING '18' FROM 6);
		
		--2).SUB STRING METHOD
		--SET OutputRoot.JSON.Data.Result = SUBSTRING(test from 6 for 5);
		--SET OutputRoot.JSON.Data.Result = SUBSTRING('viart kohli' BEFORE 'kohli');
		
		--3).REPLACE METHOD
		--SET OutputRoot.JSON.Data.Result = REPLACE(test,'and','vs');
		
		--4).TRANSLATE METHOD	
		--SET OutputRoot.JSON.Data.Result = TRANSLATE(test,'virat','***');
		
		--5).REPLECATE METHOD
		--SET OutputRoot.JSON.Data.Result=REPLICATE(test,3);
		
		--6).COALESCE METHOD
		--DECLARE test1 REFERENCE TO InputRoot.XMLNSC.address;
		--SET OutputRoot.JSON.Data.Result = COALESCE(test1,'eidiko!');
		
		--7).CONTAIN MATHOD
		--SET OutputRoot.JSON.Data.Result=CONTAINS(test,'virat');
		
		  
		
		
		
	END;
END MODULE;
